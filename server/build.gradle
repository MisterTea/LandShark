apply plugin: 'java'
apply plugin: 'scala'
apply plugin: 'maven'
apply plugin: 'eclipse'

group = 'com.github.mistertea'
version = '0.0.1-SNAPSHOT'

description = """LandShark"""

sourceCompatibility = 1.7
targetCompatibility = 1.7

eclipse {
  classpath {
    downloadSources=true
  }

  project {
     name = 'LandShark'
  }
}

buildscript {
  repositories {
    mavenCentral();
  }
  dependencies { classpath 'com.github.iamsteveholmes:scrooge-gradle-plugin:0.5' }
}

apply plugin: 'scrooge-gradle-plugin'

compileScrooge {
  delete "src/gen/scala"
  thriftFiles = fileTree(dir: "src/main/resources/thrift", include: "**/*.thrift")
  dest = file("src/gen/scala")
  opts = ["--finagle"]
}

task compileScroogeJava(type: org.iamsteveholmes.gradle.ScroogeCompileTask) {
  delete "src/gen/java"
  thriftFiles = fileTree(dir: "src/main/resources/thrift", include: "**/*.thrift")
  dest = file("src/gen/java")
  opts = ["--finagle", "--language", "experimental-java"]

}
project.afterEvaluate {
  project.tasks.compileScroogeJava.execute()
}

task generateThrift << {
  new File("src/gen").mkdirs()
  delete "src/gen/gen-java"
  ext.thriftFiles = fileTree(dir: 'src/main/resources/thrift').matching { include '**/*.thrift' }
  for(String thriftFile : ext.thriftFiles) {
    exec {
      executable = 'thrift'
      args = [
        '--gen',
        'java',
        '-o',
        'src/gen/',
        thriftFile
      ]
    }
  }
}

task thriftPython << {
  new File("src/gen").mkdirs()
  delete "src/gen/gen_py"
  ext.thriftFiles = fileTree(dir: 'src/main/resources/thrift').matching { include '**/*.thrift' }
  for(String thriftFile : ext.thriftFiles) {
    exec {
      executable = 'thrift'
      args = [
        '--gen',
        'py:newstyle',
        '-o',
        'src/gen/',
        thriftFile
      ]
    }
  }
  file("src/gen/gen-py").renameTo(file("src/gen/gen_py"))
}

compileJava {
  it.dependsOn generateThrift
}
compileScala { it.dependsOn generateThrift, compileScrooge }
tasks.eclipseProject.dependsOn(generateThrift, compileScrooge)

sourceSets {
  main {
    java {
      srcDir 'src/gen/gen-java'
      srcDir 'src/gen/scala'
      srcDir 'src/main/java'
    }
    resources { srcDir 'src/main/resources' }
    scala {
      srcDir 'src/gen/gen-java'
      srcDir 'src/gen/scala'
      srcDir 'src/main/java'
    }
  }
}

repositories {
  // Uncomment if you have locally installed packages that should override maven central
  // mavenLocal()
  mavenCentral();

  maven { url "http://clojars.org/repo" }
  maven { url "http://conjars.org/repo" }
  maven { url "http://repo.akka.io/releases" }
  maven { url "http://scala-tools.org/repo-releases" }
  maven { url "http://repo.maven.apache.org/maven2" }
}

ext.cascadingVersion = '2.1.6'
ext.hadoopVersion = '1.2.0'

dependencies {
    compile group: 'junit', name: 'junit', version:'4.8.2'
    compile group: 'junit', name: 'junit-dep', version:'4.8.2'
    compile group: 'org.apache.httpcomponents', name: 'httpclient', version:'4.3'
    compile group: 'org.slf4j', name: 'slf4j-api', version:'1.6.6'
    compile group: 'org.slf4j', name: 'slf4j-log4j12', version:'1.6.6'
    compile group: 'log4j', name: 'log4j', version:'1.2.16'
    compile group: 'commons-io', name: 'commons-io', version:'2.4'
    compile group: 'commons-codec', name: 'commons-codec', version:'1.8'
    compile group: 'org.apache.commons', name: 'commons-math', version:'2.2'
    compile group: 'net.sourceforge.collections', name: 'collections-generic', version:'4.01'
    compile group: 'org.apache.thrift', name: 'libthrift', version:'0.9.1'
    compile group: 'org.apache.hadoop', name: 'hadoop-client', version:'2.4.0'
    compile group: 'org.jsoup', name: 'jsoup', version:'1.7.2'
    compile group: 'com.google.code.gson', name: 'gson', version:'2.2.4'
    compile group: 'org.apache.crunch', name: 'crunch-core', version:'0.10.0-hadoop2'
    compile group: 'org.apache.crunch', name: 'crunch-scrunch', version:'0.10.0-hadoop2'
    compile group: 'net.htmlparser.jericho', name: 'jericho-html', version:'3.1'
    compile group: 'org.apache.avro', name: 'avro', version:'1.7.5'

  // Scala compiler + related tools, and standard library
  compile 'org.scala-lang:scala-library:2.11.4'

  // Twitter utils (needed for Scrooge and Finagle)
  compile 'com.twitter:util-core_2.10:6.12.1'

  // Scrooge
  compile 'com.twitter:scrooge-core_2.10:3.12.2'
  compile 'com.twitter:scrooge-runtime_2.10:3.12.2'

  // Finagle (RPC Framework)
  compile 'com.twitter:finagle-core_2.10:6.12.2'
  compile 'com.twitter:finagle-thrift_2.10:6.12.2'

  // Joda Time
  compile 'joda-time:joda-time:2.3'
}

// Speed up scala compiling by using zinc
tasks.withType(ScalaCompile) { scalaCompileOptions.useAnt = false }

task copyJars(type: Copy) {
  into "out/deps"
  from configurations.runtime
}

libsDirName = "../out/lib";

task solid(type:Jar) {
  // Build jar with dependencies
  from(configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }) {
    exclude "META-INF/*.SF"
    exclude "META-INF/*.DSA"
    exclude "META-INF/*.RSA"
    exclude "META-INF/license"
    exclude "META-INF/LICENSE"
  }
  baseName = 'LandsharkSolid'
  destinationDir = new File("solid")
  zip64 = true
  with jar
}

// Copy jar dependencies
jar { it.dependsOn copyJars }
